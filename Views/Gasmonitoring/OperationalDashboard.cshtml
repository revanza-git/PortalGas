
@{
    Layout = "~/Views/Shared/Panel.cshtml";

    var target_pasokan = (Int32)ViewData["target_pasokan"];
    var realisasi_pasokan = (Decimal)ViewData["realisasi_pasokan"];
    var prosentase_pasokan = target_pasokan == 0 ? 0 : Math.Round(realisasi_pasokan * 100 / target_pasokan);
    var target_penjualan = (Int32)ViewData["target_penjualan"];
    var realisasi_penjualan = (Decimal)ViewData["realisasi_penjualan"];
    var realisasi_penjualan1 = (Decimal)ViewData["realisasi_penjualan1"];
    var realisasi_penjualan2 = (Decimal)ViewData["realisasi_penjualan2"];
    var realisasi_penjualan3 = (Decimal)ViewData["realisasi_penjualan3"];
    var realisasi_penjualan4 = (Decimal)ViewData["realisasi_penjualan4"];
    var prosentase_penjualan = target_penjualan == 0 ? 0 : Math.Round(realisasi_penjualan * 100 / target_penjualan);
    var jsonROB = Html.Raw(ViewData["jsonROB"]);
    var jsonBOG = Html.Raw(ViewData["jsonBOG"]);
    var jsonRegasRate = Html.Raw(ViewData["jsonRegasRate"]);
    var startDate = (DateTime) ViewData["StartDate"];
    var endDate = (DateTime)ViewData["EndDate"];

    var jsons = (String[]) ViewData["jsonDailyEnergy"];
    var json1 = Html.Raw(jsons[1]);
    var json2 = Html.Raw(jsons[2]);
    var json3 = Html.Raw(jsons[3]);
    var json4 = Html.Raw(jsons[4]);

    var orfData = (List<ORFData>)ViewData["orfData"];
    var orfDataDaily = (List<ORFDataDaily>)ViewData["orfDataDaily"];
    Decimal F1 = 0;
    Decimal C1 = 0;
    try
    {
        F1 = orfData.Where(x => x.LineID == 1).LastOrDefault().Temperature;
        C1 = (F1 - 32) / (Decimal)1.8;
    }
    catch (Exception)
    {}

    Decimal F2 = 0;
    Decimal C2 = 0;
    try
    {
        F2 = orfData.Where(x => x.LineID == 2).LastOrDefault().Temperature;
        C2 = (F2 - 32) / (Decimal)1.8;
    }
    catch (Exception)
    { }

    Decimal F3 = 0;
    Decimal C3 = 0;
    try
    {
        F3 = orfData.Where(x => x.LineID == 3).LastOrDefault().Temperature;
        C3 = (F3 - 32) / (Decimal)1.8;
    }
    catch (Exception)
    { }

    Decimal F4 = 0;
    Decimal C4 = 0;
    try
    {
        F4 = orfData.Where(x => x.LineID == 4).LastOrDefault().Temperature;
        C4 = (F4 - 32) / (Decimal)1.8;
    }
    catch (Exception)
    { }

    Decimal DailyEnergy1 = 0;
    Decimal DailyEnergy2 = 0;
    Decimal DailyEnergy3 = 0;
    Decimal DailyEnergy4 = 0;
    try
    {
        DailyEnergy1 = orfDataDaily.LastOrDefault(x => x.LineID == 1).DailyEnergy;
    }
    catch (Exception)
    { }
    try
    {
        DailyEnergy2 = orfDataDaily.LastOrDefault(x => x.LineID == 2).DailyEnergy;
    }
    catch (Exception)
    { }
    try
    {
        DailyEnergy3 = orfDataDaily.LastOrDefault(x => x.LineID == 3).DailyEnergy;
    }
    catch (Exception)
    { }
    try
    {
        DailyEnergy4 = orfDataDaily.LastOrDefault(x => x.LineID == 4).DailyEnergy;
    }
    catch (Exception)
    { }

    Decimal HeatingValue1 = 0;
    Decimal HeatingValue2 = 0;
    Decimal HeatingValue3 = 0;
    Decimal HeatingValue4 = 0;
    try
    {
        HeatingValue1 = orfDataDaily.LastOrDefault(x => x.LineID == 1).HeatingValue;
    }
    catch (Exception)
    { }

    try
    {
        HeatingValue2 = orfDataDaily.LastOrDefault(x => x.LineID == 2).HeatingValue;
    }
    catch (Exception)
    { }

    try
    {
        HeatingValue3 = orfDataDaily.LastOrDefault(x => x.LineID == 3).HeatingValue;
    }
    catch (Exception)
    { }

    try
    {
        HeatingValue4 = orfDataDaily.LastOrDefault(x => x.LineID == 4).HeatingValue;
    }
    catch (Exception)
    { }

    Decimal Psig1 = 0;
    Decimal Psig2 = 0;
    Decimal Psig3 = 0;
    Decimal Psig4 = 0;
    Decimal Barg1 = 0;
    Decimal Barg2 = 0;
    Decimal Barg3 = 0;
    Decimal Barg4 = 0;

    try
    {
        Psig1 = orfDataDaily.LastOrDefault(x => x.LineID == 1).Pressure;
        Barg1 = Psig1 / (Decimal)14.5;
    }
    catch (Exception)
    { }

    try
    {
        Psig2 = orfDataDaily.LastOrDefault(x => x.LineID == 2).Pressure;
        Barg2 = Psig2 / (Decimal)14.5;
    }
    catch (Exception)
    { }

    try
    {
        Psig3 = orfDataDaily.LastOrDefault(x => x.LineID == 3).Pressure;
        Barg3 = Psig3 / (Decimal)14.5;
    }
    catch (Exception)
    { }

    try
    {
        Psig4 = orfDataDaily.LastOrDefault(x => x.LineID == 4).Pressure;
        Barg4 = Psig4 / (Decimal)14.5;
    }
    catch (Exception)
    { }
}

@section PageLevelPlugin {
    <link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
    <link rel="stylesheet" href="~/admin/vendor/bootstrap-daterangepicker/daterangepicker-bs3.css" />

    <style>
        #chartdiv {
            width: 100%;
            height: 350px;
        }

        #chartdiv2, #chartdiv3, #chartdiv4, #chartdiv5, #chartdiv6 {
            width: 100%;
            height: 500px;
        }
    </style>
}

@section TitleBar {
    <strong>Gas Monitoring</strong>
}

<!-- main area -->
<div class="main-content">
    <div class="panel">
        <div class="panel-heading border">
            <ol class="breadcrumb mb0 no-padding">
                <li>
                    <a href="javascript:;">Content</a>
                </li>
                <li>
                    <a href="javascript:;">Gas Monitoring</a>
                </li>
                <li class="active"><strong>Operational Dashboard</strong></li>
            </ol>
        </div>
        <div class="panel-body">
            @if (TempData["message"] != null)
            {
                <div class="alert alert-success"><i class="fa fa-lg fa-check-circle"></i> @TempData["message"]</div>
            }
            <div class="row">
                <div class="col-md-3">
                    Year: 
                    <select onchange="updateDashboards(this.value)">
                        @for (Int32 year = DateTime.Now.Year; year >= 2012; year--)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <section class="widget bg-success text-center bold">
                        <div class="widget-details col-xs-6">
                            <h2 class="no-margin" id="rkap"><b><label id="target_pasokan">@target_pasokan</label> Cargo</b></h2>
                            <small class="text-uppercase" style="font-size:15px;"><b>RKAP</b></small>
                        </div>
                        <div class="widget-details col-xs-6">
                            <h2 class="no-margin" id="realisasi"><b><label id="realisasi_pasokan">@realisasi_pasokan.ToString("N0")</label> Cargo</b></h2>
                            <small class="text-uppercase" style="font-size:15px;"><b>REALISASI</b></small>
                        </div>
                    </section>
                </div>
                <div class="col-md-6">
                    <section class="widget bg-warning text-center">
                        <div class="widget-details col-xs-12">
                            <h2 class="no-margin"><b><label id="realisasi_penjualan">@realisasi_penjualan.ToString("N0")</label> MMBTU</b></h2>
                            <small class="text-uppercase" style="font-size:15px;"><b>TOTAL GAS SENT</b></small>
                        </div>
                    </section>
                </div>
                <div class="row">
                    <div class="col-md-6" style="text-align:center">

                        <div id="chartdiv"></div>
                    </div>

                    <div class="col-md-6">
                        <div class="widget-chart bg-white">
                            <div class="canvas-holder mt5 mb5">
                                <div class="flot-pie chart-sm" style="height:250px;"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="widget bg-danger">
                            <div class="widget-icon bg-white pull-left fa fa-tachometer">
                            </div>
                            <div class="overflow-hidden">
                                <span class="widget-title" style="font-weight:bold; color: white">
                                    LINE 350 MK
                                </span>
                                <span class="widget-subtitle" style="font-weight:bold; color: white">
                                    @DailyEnergy1.ToString("N0") MMBTUD<br />
                                    @HeatingValue1.ToString("N0") BTU/SCF<br />
                                    @Psig1.ToString("N0") Psig (@Barg1.ToString("N0") Barg)<br />
                                    @F1.ToString("N0") <sup>o</sup>F (@C1.ToString("N0") <sup>o</sup>C)<br />
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="widget bg-blue">
                            <div class="widget-icon bg-white pull-left fa fa-tachometer">
                            </div>
                            <div class="overflow-hidden">
                                <span class="widget-title" style="font-weight:bold; color: white">LINE 620 MK</span>
                                <span class="widget-subtitle" style="font-weight:bold; color: white">
                                    @DailyEnergy2.ToString("N0") MMBTUD<br />
                                    @HeatingValue2.ToString("N0") BTU/SCF<br />
                                    @Psig2.ToString("N0") Psig (@Barg2.ToString("N0") Barg)<br />
                                    @F2.ToString("N0") <sup>o</sup>F (@C2.ToString("N0") <sup>o</sup>C)<br />
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="widget bg-warning">
                            <div class="widget-icon bg-white pull-left fa fa-tachometer">
                            </div>
                            <div class="overflow-hidden">
                                <span class="widget-title" style="font-weight:bold; color: white">LINE 350 MK</span>
                                <span class="widget-subtitle" style="font-weight:bold; color: white">
                                    @DailyEnergy3.ToString("N0") MMBTUD<br />
                                    @HeatingValue3.ToString("N0") BTU/SCF<br />
                                    @Psig3.ToString("N0") Psig (@Barg3.ToString("N0") Barg)<br />
                                    @F3.ToString("N0") <sup>o</sup>F (@C3.ToString("N0") <sup>o</sup>C)<br />
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="widget bg-success">
                            <div class="widget-icon bg-white pull-left fa fa-tachometer">
                            </div>
                            <div class="overflow-hidden">
                                <span class="widget-title" style="font-weight:bold; color: white">PERTAGAS</span>
                                <span class="widget-subtitle" style="font-weight:bold; color: white">
                                    @DailyEnergy4.ToString("N0") MMBTUD<br />
                                    @HeatingValue4.ToString("N0") BTU/SCF<br />
                                    @Psig4.ToString("N0") Psig (@Barg4.ToString("N0") Barg)<br />
                                    @F4.ToString("N0") <sup>o</sup>F (@C4.ToString("N0") <sup>o</sup>C)<br />
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="chartdiv2"></div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-3">
                        Period:
                        <div class="input-prepend input-group">
                            <span class="add-on input-group-addon"><i class="fa fa-calendar"></i></span>
                            <input type="text" name="daterange" class="form-control drp" value="@startDate.ToString("dd/MM/yyyy") - @endDate.ToString("dd/MM/yyyy")" onchange="updateGraphs(this.value)"/>
                        </div>
                     </div>                   
                </div>
                <div class="row">
                    <div class="col-md-12">                        
                        <div id="chartdiv3"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="chartdiv4"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="chartdiv5"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /main area -->

@section PageLevelScripts {
    <!-- Resources -->
    <script src="~/admin/vendor/amcharts_3.21.12/amcharts/amcharts.js"></script>
    <script src="~/admin/vendor/amcharts_3.21.12/amcharts/gauge.js"></script>
    <script src="~/admin/vendor/amcharts_3.21.12/amcharts/plugins/export/export.min.js"></script>
    <script src="~/admin/vendor/amcharts_3.21.12/amcharts/themes/light.js"></script>
    <script src="~/admin/vendor/amcharts_3.21.12/amcharts/serial.js"></script>
    <script src="https://www.amcharts.com/lib/3/amstock.js"></script>
    <script src="~/admin/vendor/flot/jquery.flot.js"></script>
    <script src="~/admin/vendor/flot/jquery.flot.categories.js"></script>
    <script src="~/admin/vendor/flot/jquery.flot.resize.js"></script>
    <script src="~/admin/vendor/flot/jquery.flot.pie.js"></script>
    <script src="~/admin/vendor/moment/moment.js"></script>
    <script src="~/admin/vendor/bootstrap-daterangepicker/daterangepicker.js"></script>

}

@section InitPageScripts {
    <script>
            $('.drp').daterangepicker({
                format: 'DD/MM/YYYY',
                startDate: '@startDate.ToString("dd/MM/yyyy")',
                endDate: '@endDate.ToString("dd/MM/yyyy")'
            });

            var chartData1 = @json1;
            var chartData2 = @json2;
            var chartData3 = @json3;
            var chartData4 = @json4;

            var chart = AmCharts.makeChart("chartdiv2", {
                "type": "stock",
                "theme": "light",
                "dataSets": [{
                    "title": "LINE 350 MK",
                    "fieldMappings": [{
                        "fromField": "value",
                        "toField": "value"
                    }],
                    "dataProvider": chartData1,
                    "categoryField": "date"
                }, {
                    "title": "LINE 620 MK",
                    "fieldMappings": [{
                        "fromField": "value",
                        "toField": "value"
                    }],
                    "dataProvider": chartData2,
                    "categoryField": "date"
                }, {
                    "title": "LINE 350 TP",
                    "fieldMappings": [{
                        "fromField": "value",
                        "toField": "value"
                    }],
                    "dataProvider": chartData3,
                    "categoryField": "date"
                }, {
                    "title": "PERTAGAS",
                    "fieldMappings": [{
                        "fromField": "value",
                        "toField": "value"
                    }],
                    "dataProvider": chartData4,
                    "categoryField": "date"
                }
                ],

                "panels": [{
                    "showCategoryAxis": false,
                    "title": "Value",
                    "percentHeight": 70,
                    "stockGraphs": [{
                        "id": "g1",
                        "valueField": "value",
                        "comparable": true,
                        "compareField": "value",
                        "balloonText": "[[title]]:<b>[[value]]</b>",
                        "compareGraphBalloonText": "[[title]]:<b>[[value]]</b>"
                    }],
                    "stockLegend": {
                        "periodValueTextComparing": "[[percents.value.close]]%",
                        "periodValueTextRegular": "[[value.close]]"
                    }
                }],

                "chartScrollbarSettings": {
                    "graph": "g1"
                },

                "chartCursorSettings": {
                    "valueBalloonsEnabled": true,
                    "fullWidth": true,
                    "cursorAlpha": 0.1,
                    "valueLineBalloonEnabled": true,
                    "valueLineEnabled": true,
                    "valueLineAlpha": 0.5
                },

                "periodSelector": {
                    "position": "left",
                    "periods": [{
                        "period": "DD",
                        "selected": true,
                        "count": 1,
                        "label": "1 day"
                    }, {
                        "period": "MM",
                        "selected": true,
                        "count": 1,
                        "label": "1 month"
                    }, {
                        "period": "YYYY",
                        "count": 1,
                        "label": "1 year"
                    }, {
                        "period": "YTD",
                        "label": "YTD"
                    }, {
                        "period": "MAX",
                        "label": "MAX"
                    }]
                },

                "dataSetSelector": {
                    "position": "left"
                },

                "export": {
                    "enabled": true
                }
            });

            var chart2 = AmCharts.makeChart("chartdiv", {
                "fontSize": "7",
                "theme": "light",
                "type": "gauge",
                "axes": [{
                    "topText": @prosentase_pasokan + " %",
                    "topTextFontSize": 20,
                    "topTextYOffset": 70,
                    "axisColor": "#31d6ea",
                    "axisThickness": 1,
                    "endValue": 100,
                    "gridInside": true,
                    "inside": true,
                    "radius": "50%",
                    "valueInterval": 10,
                    "tickColor": "#67b7dc",
                    "startAngle": -90,
                    "endAngle": 90,
                    "unit": "%",
                    "bandOutlineAlpha": 0,
                    "bands": [{
                        "color": "#0080ff",
                        "endValue": 100,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }, {
                        "color": "#3cd3a3",
                        "endValue": @prosentase_pasokan,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }]
                }],
                "arrows": [{
                    "alpha": 1,
                    "innerRadius": "35%",
                    "nailRadius": 0,
                    "radius": "170%",
                    "value": @prosentase_pasokan
                }]
            });

            var plotData = [
                {
                    label: 'LINE 350 MK',
                    data: @realisasi_penjualan1.ToString("N0").Replace(".",""),
                    color: $.urbanApp.danger
                },
                {
                    label: 'LINE 620 MK',
                    data: @realisasi_penjualan2.ToString("N0").Replace(".", ""),
                    color: $.urbanApp.info
                },
                {
                    label: 'LINE 350 TP',
                    data: @realisasi_penjualan3.ToString("N0").Replace(".", ""),
                    color: $.urbanApp.warning
                },
                {
                    label: 'PERTAGAS',
                    data: @realisasi_penjualan4.ToString("N0").Replace(".", ""),
                    color: $.urbanApp.success
                }
             ];
            // Pie chart
            $.plot($('.flot-pie'), plotData, {
                series: {
                    pie: {
                        show: true,
                        innerRadius: 0.5,
                        stroke: {
                            width: 2
                        },
                        label: {
                            show: true,
                        }
                    }
                },
                legend: {
                    show: true
                },
            });

            var chart3 = AmCharts.makeChart("chartdiv3", {
                "theme": "light",
                "type": "serial",
                "titles": [{
                    "text": "Trend ROB LNG Tank Inventory"
                }],
                "startDuration": 2,
                "dataProvider": @jsonROB,
                "valueAxes": [{
                    "position": "left",
                    "title": "ROB LNG Tank Inventory(M3)"
                }],
                "graphs": [{
                    "balloonText": "[[category]]: <b>[[value]]</b>",
                    "fillColors": "#FF0F00",
                    "fillAlphas": 1,
                    "lineAlpha": 0.1,
                    "type": "column",
                    "valueField": "value"
                }],
                "depth3D": 20,
                "angle": 30,
                "chartCursor": {
                    "categoryBalloonEnabled": false,
                    "cursorAlpha": 0,
                    "zoomable": false
                },
                "categoryField": "date",
                "categoryAxis": {
                    "gridPosition": "start",
                    "labelRotation": 90
                },
                "export": {
                    "enabled": true
                }
            });

            var chart4 = AmCharts.makeChart("chartdiv4", {
                "theme": "light",
                "titles": [{
                    "text": "Trend Boil of Gas (BOG)"
                }],

                "type": "serial",
                "startDuration": 2,
                "dataProvider": @jsonBOG,
                "valueAxes": [{
                    "position": "left",
                    "title": "Nilai BOG (M3)"
                }],
                "graphs": [{
                    "balloonText": "[[category]]: <b>[[value]]</b>",
                    "fillColors": "#04D215",
                    "fillAlphas": 1,
                    "lineAlpha": 0.1,
                    "type": "column",
                    "valueField": "value"
                }],
                "depth3D": 20,
                "angle": 30,
                "chartCursor": {
                    "categoryBalloonEnabled": false,
                    "cursorAlpha": 0,
                    "zoomable": false
                },
                "categoryField": "date",
                "categoryAxis": {
                    "gridPosition": "start",
                    "labelRotation": 90
                },
                "export": {
                    "enabled": true
                }
            });

            var chart5 = AmCharts.makeChart("chartdiv5", {
                "theme": "light",
                "type": "serial",
                "titles": [{
                    "text": "Trend Regas Sent Out Rate"
                }],

                "startDuration": 2,
                "dataProvider": @jsonRegasRate,
                "valueAxes": [{
                    "position": "left",
                    "title": "Regas Sent Out Rate (MMSCFD)"
                }],
                "graphs": [{
                    "balloonText": "[[category]]: <b>[[value]]</b>",
                    "fillColors": "#0D52D1",
                    "fillAlphas": 1,
                    "lineAlpha": 0.1,
                    "type": "column",
                    "valueField": "value",
                }],
                "depth3D": 20,
                "angle": 30,
                "chartCursor": {
                    "categoryBalloonEnabled": false,
                    "cursorAlpha": 0,
                    "zoomable": false
                },
                "categoryField": "date",
                "categoryAxis": {
                    "gridPosition": "start",
                    "labelRotation": 90
                },
                "export": {
                    "enabled": true
                }
            });

        function updateDashboards(tahun) {
            getDashboardData(tahun, function (result) {
                console.log(result);
                chart2.arrows[0].setValue(result.prosentase_pasokan);
                chart2.axes[0].setTopText(result.prosentase_pasokan + " %");
                chart2.axes[0].bands[1].setEndValue(result.prosentase_pasokan);

                $("#target_pasokan").html(result.target_pasokan);
                $("#realisasi_pasokan").html(result.realisasi_pasokan);
                $("#realisasi_penjualan").html(result.realisasi_penjualan);

                var plotData = [
                    {
                        label: 'LINE 350 MK',
                        data: result.realisasi_penjualan1,
                        color: $.urbanApp.danger
                    },
                    {
                        label: 'LINE 620 MK',
                        data: result.realisasi_penjualan2,
                        color: $.urbanApp.info
                    },
                    {
                        label: 'LINE 350 TP',
                        data: result.realisasi_penjualan3,
                        color: $.urbanApp.warning
                    },
                    {
                        label: 'PERTAGAS',
                        data: result.realisasi_penjualan4,
                        color: $.urbanApp.success
                    }
                 ];
                // Pie chart
                $.plot($('.flot-pie'), plotData, {
                    series: {
                        pie: {
                            show: true,
                            innerRadius: 0.5,
                            stroke: {
                                width: 2
                            },
                            label: {
                                show: true,
                            }
                        }
                    },
                    legend: {
                        show: true
                    },
                });
            });
        }

        function updateGraphs(rd) {
            dates = rd.split("-");
            start = dates[0].trim();
            end = dates[1].trim();
            sd = start.split("/");
            ed = end.split("/");
            startDate = sd[2] + "-" + sd[1] + "-" + sd[0];
            endDate = ed[2] + "-" + ed[1] + "-" + ed[0];
            getROBByPeriod(startDate, endDate, function (result) {
                chart3.dataProvider = result;
                chart3.validateData();
            });

            getBOGByPeriod(startDate, endDate, function (result) {
                chart4.dataProvider = result;
                chart4.validateData();
            });

            getRegasRateByPeriod(startDate, endDate, function (result) {
                chart5.dataProvider = result;
                chart5.validateData();
            });
        }

        function getROBByPeriod(startDate,endDate,handleData) {
            $.ajax({
                url: "getROBByPeriod",
                method: "GET",
                data: {
                    "startDate": startDate,
                    "endDate": endDate
                },
                dataType: "json",
                success: function (result) {
                    handleData(result);
                }
            });
        }

        function getBOGByPeriod(startDate, endDate, handleData) {
            $.ajax({
                url: "getBOGByPeriod",
                method: "GET",
                data: {
                    "startDate": startDate,
                    "endDate": endDate
                },
                dataType: "json",
                success: function (result) {
                    handleData(result);
                }
            });
        }

        function getRegasRateByPeriod(startDate, endDate, handleData) {
            $.ajax({
                url: "getRegasRateByPeriod",
                method: "GET",
                data: {
                    "startDate": startDate,
                    "endDate": endDate
                },
                dataType: "json",
                success: function (result) {
                    handleData(result);
                }
            });
        }

        function getDashboardData(tahun, handleData) {
            $.ajax({
                url: "getDashboardData",
                method: "GET",
                data: {
                    "tahun": tahun,
                },
                dataType: "json",
                success: function (result) {
                    handleData(result);
                }
            });
        }
    </script>
}
